/* color_histogram.c  このプログラムの名前 */
#include<stdio.h>
#include"ppmlib.h"
long int hist[256][3]; /* ヒストグラム用配列 */
void make_histogram_image( int n1, int n2, int h );

int main(void)
{
    load_color_image( 0, "" );  /* ファイル → 画像No.0 */
    /* ヒストグラムの画像を作って画像No.1に保存 */
    make_histogram_image( 0, 1, 256 );
    printf("カラーヒストグラムの画像を保存します\n");
    save_color_image( 1, "" );  /* 画像No.1 → ファイル */
    return 0;
}

void make_histogram_image( int n1, int n2, int h )
/* 画像No.n1のカラーヒストグラムを画像化(横256×縦h画素) */
/* して画像No.n2に記録する */
{
    int i,j,x,y;  /* 制御変数 */
    long int max; /* 最大頻度 */
    int takasa;   /* 各階調値の頻度の高さ */

    /* ヒストグラムの初期化 */
    for(i=0;i<256;i++) for(j=0;j<3;j++) hist[i][j] = 0;
    /* 画像をラスタスキャンしてグラフを作る */
    for(y=0;y<height[n1];y++)
        for(x=0;x<width[n1];x++)
            for(j=0;j<3;j++)
                hist[ image[n1][x][y][j] ][j]++; /* 累積を１増加 */
    /* 画像の縦・横の値の入力と初期化 */
    width[n2]=256;  height[n2]=h;  init_color_image( n2, 0, 0, 0 );
    /* ヒストグラムの最大頻度maxを求める */
    max=0;
    for(i=0;i<256;i++)
        for(j=0;j<3;j++)
            if ( hist[i][j] > max ) max = hist[i][j];
    /* 縦幅をh画素に正規化しながら画像に値を代入 */
    for(i=0;i<3;i++)
        for(x=0;x<width[n2];x++){
            takasa = (int)( h / (double)max * hist[x][i] );
            if ( takasa > h ) takasa = h;
            for(y=0;y<h;y++)
                if ( y < takasa ) image[n2][x][h-1-y][i] = 255;
        }
}
